  ###################################
  # Slowly moving remaining Home Assistant Automations to AppDaemon
  ###################################
  
  - alias: "Temporary Bayesian state change on notify"
    trigger:
      - platform: state
        entity_id: binary_sensor.bayesian_sensor_ryan_is_home
        to: 'on'
    action:
      - service: telegram_bot.send_message
        data:
          message: "Ryan home Bayesian sensor on."

  - alias: "Temporary Bayesian state change off notify"
    trigger:
      - platform: state
        entity_id: binary_sensor.bayesian_sensor_ryan_is_home
        to: 'off'
    action:
      - service: telegram_bot.send_message
        data:
          message: "Ryan home Bayesian sensor off."

  - alias: "Apple TV Remote Sleep"
    hide_entity: false
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: media_player.samsung_tv
        to: 'off'
    condition:
      - condition: state
        entity_id: remote.apple_tv
        state: 'on'
    action:
      service: remote.turn_off
      entity_id: remote.apple_tv
  #The above automation seems unnecessary, but prevents the TV from seemingly randomly waking up.

  - alias: "Chatbot start roomba"
    hide_entity: false
    initial_state: 'on'
    trigger:
      platform: event
      event_type: telegram_command
      #event_type: telegram_callback
      event_data:
        command: '/clean'
        # user_id: !secret telegram_chat_id
    action:
      service: script.turn_on
      entity_id: script.roomba_liftoff

  - alias: "Chatbot ice roomba"
    hide_entity: false
    initial_state: 'on'
    trigger:
      platform: event
      event_type: telegram_command
      #event_type: telegram_callback
      event_data:
        command: '/nope'
    action:
      service: script.turn_on
      entity_id: script.roomba_chill

  - alias: "Chatbot youre welcome"
    hide_entity: false
    initial_state: 'on'
    trigger:
      platform: event
      event_type: telegram_command
      #event_type: telegram_callback
      event_data:
        command: '/thanks'
    action:
      service: script.turn_on
      entity_id: script.youre_welcome

  - alias: "Chatbot fan to auto"
    hide_entity: false
    initial_state: 'on'
    trigger:
      platform: event
      event_type: telegram_command
      #event_type: telegram_callback
      event_data:
        command: '/filter'
    action:
      service: script.turn_on
      entity_id: script.chatbot_filter

  - alias: "Chatbot fan decline"
    hide_entity: false
    initial_state: 'on'
    trigger:
      platform: event
      event_type: telegram_command
      #event_type: telegram_callback
      event_data:
        command: '/cancerplease'
    action:
      service: script.turn_on
      entity_id: script.chatbot_nofilter

  - alias: "Wake up"
    trigger:
      platform: template
      value_template: '{{ states.sensor.time.state == states.sensor.alarm_clock_time_long.state }}'
    condition:
      - condition: state
        entity_id: input_boolean.alarm_on
        state: 'on'
    action:
      service: script.turn_on
      entity_id: script.wake_up_ryan

  - alias: "Bathroom Motion Off"
    hide_entity: false
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: sensor.bathroom_motion_sensors
      to: 'off'
    action:
      service: script.turn_on
      entity_id: script.shitters_quiet

  ###################################
  # PORTED TO APPDAEMON
  # These have been ported to AppDaemon, see contents of apps/
  ###################################
  # - alias: "Apple TV playing"
  #   initial_state: 'on'
  #   trigger:
  #     - platform: state
  #       entity_id: media_player.apple_tv
  #       to: 'playing'
  #   # condition:
  #   #   condition: sun
  #   #   after: sunset
  #   #   after_offset: '01:00:00'
  #   action:
  #     service: scene.turn_on
  #     entity_id: scene.tv_night_playing

  # - alias: "Apple TV from playing"
  #   initial_state: 'on'
  #   trigger:
  #     - platform: state
  #       entity_id: media_player.apple_tv
  #       from: 'playing'
  #   #  condition:
  #   #    condition: sun
  #   #    after: sunset
  #   #    after_offset: '01:00:00'
  #   action:
  #     service: scene.turn_on
  #     entity_id: scene.tv_night_paused

  # #This allows me to keep Apple TV start_off true, without stopping Apple TV state change automations.
  # - alias: "Apple TV Remote Wake"
  #   initial_state: 'on'
  #   trigger:
  #     - platform: state
  #       entity_id: media_player.samsung_tv
  #       to: 'on'
  #   condition:
  #     - condition: state
  #       entity_id: remote.apple_tv
  #       state: 'off'
  #   action:
  #     service: remote.turn_on
  #     entity_id: remote.apple_tv

  # - alias: "Late night piss light"
  #   trigger:
  #     platform: state
  #     entity_id: binary_sensor.motion_sensor_158d00022399ea
  #     to: 'on'
  #   condition:
  #     - condition: state
  #       entity_id: input_boolean.sleep_mode
  #       state: 'on'
  #   action:
  #     service: scene.turn_on
  #     entity_id: scene.night_light_phase_one

  # - alias: "Bedroom nightlight motion trigger"
  #   trigger:
  #     platform: state
  #     entity_id: binary_sensor.motion_sensor_158d00022399ea
  #     to: 'on'
  #   condition:
  #     - condition: state
  #       entity_id: input_boolean.sleep_mode
  #       state: 'off'
  #     # - condition: sun
  #     #   after: sunset
  #   action:
  #     service: script.turn_on
  #     entity_id: script.low_nightlight

  # - alias: "Back to sleep"
  #   trigger:
  #     platform: state
  #     entity_id: binary_sensor.motion_sensor_158d00022399ea
  #     to: 'off'
  #   condition:
  #     - condition: state
  #       entity_id: input_boolean.sleep_mode
  #       state: 'on'
  #   action:
  #     service: script.turn_on
  #     entity_id: script.all_lights_out

  # - alias: "Low Nightlight Off"
  #   trigger:
  #     platform: state
  #     entity_id: binary_sensor.motion_sensor_158d00022399ea
  #     to: 'off'
  #   condition:
  #     - condition: state
  #       entity_id: input_boolean.sleep_mode
  #       state: 'off'
  #     # - condition: sun
  #     #   after: sunset
  #   action:
  #     service: script.turn_on
  #     entity_id: script.nightlight_off

  # - alias: "Empty place"
  #   initial_state: 'on'
  #   trigger:
  #     platform: state
  #     entity_id: !secret ryan_device_tracker
  #     from: 'home'
  #   action:
  #     service: script.turn_on
  #     entity_id: script.alarm_arm

  # - alias: "Welcome home"
  #   initial_state: 'on'
  #   trigger:
  #     platform: state
  #     entity_id: binary_sensor.door_window_sensor_158d0001b714ad
  #     from: 'off'
  #     to: 'on'
  #   condition:
  #     - condition: state
  #       entity_id: input_boolean.ryan_greeted
  #       state: 'off'
  #   action:
  #     service: script.turn_on
  #     entity_id: script.welcome_home_ryan

  # - alias: "Lower bedroom sonos volume to 2 at 10pm"
  #   trigger:
  #     platform: time
  #     at: '22:00:00'
  #   action:
  #     service: script.turn_on
  #     entity_id: script.sonos_night_volume

  # - alias: "sunrise trigger"
  #   trigger:
  #     platform: sun
  #     event: sunrise
  #     offset: '+00:00:05'
  #   action:
  #     service: script.turn_on
  #     entity_id: script.sunrise_script

  # - alias: "Roomba dead"
  #   trigger:
  #     platform: state
  #     entity_id: sensor.roomba_battery
  #     to: '0'
  #   action:
  #     service: script.turn_on
  #     entity_id: script.roomba_died

  
  # - alias: "Bathroom Motion On"
  #   trigger:
  #     platform: state
  #     entity_id: binary_sensor.motion_sensor_158d0002119c02
  #     to: 'on'
  #   condition:
  #     - condition: state
  #       entity_id: input_boolean.sleep_mode
  #       state: 'off'
  #   action:
  #     service: script.turn_on
  #     entity_id: script.fire_in_the_hole

  # - alias: "vacuum done"
  #   trigger:
  #     platform: state
  #     entity_id: vacuum.roomba
  #     from: 'on'
  #   action:
  #     service: script.turn_on
  #     entity_id: script.vacuum_done

  # - alias: "Ryan in bed"
  #   trigger:
  #     platform: state
  #     entity_id: binary_sensor.eight_left_bed_presence
  #     to: 'on'
  #   action:
  #     service: script.turn_on
  #     entity_id: script.sleep_sequence

  # - alias: "Update Available"
  #   trigger:
  #     platform: state
  #     entity_id: updater.updater
  #   action:
  #     service: script.turn_on
  #     entity_id: script.update_hass
  ###################################
  # AUTOMATION GRAVEYARD
  # These were used in previous configurations/apartments, or for testing
  ###################################

  # - alias: "garage door open"
  #   trigger:
  #     - platform: state
  #       entity_id: sensor.vision_zg8101_garage_door_detector_alarm_level_2_1
  #       to: '255'
  #   action:
  #     - service: notify.telegram
  #       data:
  #         message: "The garage was opened."
  #     - service: homeassistant.turn_on
  #       entity_id: script.garage_door_alarm

  # - alias: "garage door closed"
  #   trigger:
  #     - platform: state
  #       entity_id: sensor.vision_zg8101_garage_door_detector_alarm_level_2_1
  #       to: '0'
  #   action:
  #     - service: notify.telegram
  #       data:
  #         message: "The garage was closed."

  # - alias: "Telegram callback test"
  #   trigger:
  #     platform: event
  #     event_type: telegram_callback
  #     event_data:
  #       data: '/testytest'
  #   action:
  #     service: script.turn_on
  #     entity_id: script.botack_call

  # - alias: "Telegram command test"
  #   trigger:
  #     platform: event
  #     event_type: telegram_command
  #     event_data:
  #       data: '/tcom'
  #   action:
  #     service: script.turn_on
  #     entity_id: script.botack_com

  # - alias: "Ryan home sunset-midnight"
  #   trigger:
  #     # platform: state
  #     # entity_id: !secret ryan_device_tracker
  #     # to: 'home'
  #     platform: state
  #     entity_id: binary_sensor.door_window_sensor_158d0001b714ad
  #     to: 'on'
  #   condition:
  #     - condition: sun
  #       after: sunset
  #     # - condition: time
  #     #   before: '00:00:00'
  #   action:
  #     service: scene.turn_on
  #     entity_id: scene.welcome_ryan_sunset_to_midnight

  # - alias: "Alarm - Front door open noone home"
  #   trigger:
  #     platform: state
  #     entity_id: binary_sensor.door_window_sensor_158d0001b714ad
  #     to: 'on'
  #   condition:
  #     - condition: state
  #       entity_id: !secret ryan_device_tracker
  #       state: 'not_home'
  #   action:
  #     service: script.turn_on
  #     entity_id: script.alarm_front_door_empty_place

  # - alias: "Ryan home midnight-sunrise"
  #   trigger:
  #     platform: state
  #     entity_id: !secret ryan_device_tracker
  #     to: 'home'
  #   condition:
  #     - condition: sun
  #       after: sunset
  #     - condition: time
  #       after: '00:00:00'
  #   action:
  #     service: scene.turn_on
  #     entity_id: scene.welcome_after_midnight

  # - alias: "Catchall telegram callback"
  #   trigger:
  #     platform: event
  #     event_type: telegram_callback
  #     event_data:
  #       command: '/blah'
  #   action:
  #     service: notify.rybot
  #     message: Pay no attention, I was just thinking about some dumb shit.
